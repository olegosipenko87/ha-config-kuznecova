bathroom_light:

  template:

    - binary_sensor:
        - name: "bathroom_light_problem"
          device_class: problem
          delay_on:
            minutes: 10
          state: >-
            {{ states.light.bathroom_lamp.state == 'on'
            and
            states.binary_sensor.bathroom_motion_occupancy.state == 'off'}}


  automation:


    - alias: bathroom_light_motion
      id: 'ванная - Вкл/Выкл света от движение'
      trigger:
        - platform: state
          entity_id: binary_sensor.bathroom_motion_occupancy
          from: "off"
          to: "on"
      condition:
      mode: restart
      max_exceeded: silent
      action:
        - service: light.turn_on
          entity_id: light.bathroom_lamp
        - wait_for_trigger:
            platform: state
            entity_id: binary_sensor.bathroom_motion_occupancy
            from: "on"
            to: "off"
        - delay:
            minutes: "{{ states('input_number.bathroom_delay_before_off_light') | int }}"
        - service: light.turn_off
          entity_id: light.bathroom_lamp


    - alias: bathroom_light_off_emergency
      id: 'ванная - аварийное выключение света через 10 мин'
      trigger:
        - platform: state
          entity_id: binary_sensor.bathroom_light_problem
        - platform: homeassistant
          event: start
      mode: restart
      max_exceeded: silent
      condition: "{{ states.binary_sensor.bathroom_light_problem.state == 'on' }}"
      action:
        - service: light.turn_off
          entity_id: light.bathroom_lamp



  script:

  scene:
  group:

  input_datetime:
  input_text:

  input_number:
    bathroom_delay_before_off_light:
      #initial: 7
      min: 0
      max: 30
      step: 1
      mode: box

  input_select:
  input_boolean:


  timer:











  #
